/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myproject.View.Server;

import java.io.IOException;
import javax.swing.JScrollPane;
import myproject.Model.Common.TableModels.Client2ServerTableModel;
import myproject.Model.Common.ExtendedComponents.ExtendedJTable;
import myproject.Model.Common.ProcessExecutor;
import myproject.Model.Server.MultiThreadServer;

/**
 *
 * @author BotNaEasyEnv
 */
public class ServerPanel extends javax.swing.JPanel {

    private MultiThreadServer server;
    private ExtendedJTable clientsTable = new ExtendedJTable();
    private Client2ServerTableModel clientsModel;
    /**
     * Creates new form ServerPanel
     */
    public ServerPanel() {
        initComponents();
        initServer();
        initialize();
        reload();
    }
    
    private void initialize(){
        tablePanel.add(new JScrollPane(clientsTable));
        reload();
    }
    
    private void reload(){
        clientsModel = new Client2ServerTableModel(server.getConnectedClients());
        clientsTable.setModel(clientsModel);
    }
    
    
    public void updateForMessage(String message){
        reload();
    }
    /*
    private void send(){
        String message = messageField.getText();
        try{
            if(message.contains("exe")){
                server.sendExeTo(new ShowErrorMessage(message), 0);
            }
            server.sendTo(message, 0);
            messageField.setText("");
            chatTA.append("\n"+message);
        }catch(Exception e){
            chatTA.append("\nConnection error");
        }
    }*/
    
    private void initServer(){
        try {
            server = new MultiThreadServer(this);
            server.connect();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        testButton = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        testButton.setText("test");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });
        jPanel1.add(testButton, new java.awt.GridBagConstraints());

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        tablePanel.setLayout(new java.awt.BorderLayout());
        add(tablePanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        try {
            //clientsTable.getSelectedObjects();
            //UniversalMainFrame.main.showInInternalFrame("test");
            System.out.println(ProcessExecutor.execute("cmd"));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_testButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JButton testButton;
    // End of variables declaration//GEN-END:variables
}
